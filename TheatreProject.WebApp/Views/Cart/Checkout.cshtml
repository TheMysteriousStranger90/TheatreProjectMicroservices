@using System.Globalization
@model TheatreProject.WebApp.Models.DTOs.CartDto

@{
    var usdCulture = new CultureInfo("en-US");
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model?.CartHeader != null && Model.CartDetails?.Any() == true)
{
    <form method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="CartHeader.UserId"/>
        <input type="hidden" asp-for="CartHeader.Id"/>
        <input type="hidden" asp-for="CartHeader.CouponCode"/>
        <input type="hidden" asp-for="CartHeader.DiscountTotal"/>
        <input type="hidden" asp-for="CartHeader.GrandTotal"/>

        <div class="container py-5">
            <h2 class="mb-4 text-primary">
                <i class="fas fa-shopping-cart"></i> Checkout
            </h2>

            <div class="row">
                <!-- Customer Information -->
                <div class="col-md-7">
                    <div class="card shadow-sm">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Customer Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label asp-for="CartHeader.FirstName" class="form-label">First Name</label>
                                    <input asp-for="CartHeader.FirstName" class="form-control" required/>
                                    <div class="invalid-feedback">Please enter your first name</div>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="CartHeader.LastName" class="form-label">Last Name</label>
                                    <input asp-for="CartHeader.LastName" class="form-control" required/>
                                    <div class="invalid-feedback">Please enter your last name</div>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="CartHeader.Email" class="form-label">Email</label>
                                    <input asp-for="CartHeader.Email" class="form-control" type="email" required/>
                                    <div class="invalid-feedback">Please enter a valid email</div>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="CartHeader.Phone" class="form-label">Phone</label>
                                    <input asp-for="CartHeader.Phone" class="form-control" required/>
                                    <div class="invalid-feedback">Please enter your phone number</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Payment Information -->
                    <div class="card shadow-sm mt-4">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Payment Details</h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-12">
                                    <label asp-for="CartHeader.CardNumber" class="form-label">Card Number</label>
                                    <div class="position-relative">
                                        <input asp-for="CartHeader.CardNumber"
                                               class="form-control"
                                               required
                                               id="cardNumber"
                                               maxlength="19"
                                               autocomplete="cc-number"/>
                                        <i class="card-brand-icon" id="cardBrandIcon"></i>
                                    </div>
                                    <div class="invalid-feedback" id="cardNumberError">Please enter a valid card number</div>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="CartHeader.ExpiryMonthYear" class="form-label">Expiry (MM/YY)</label>
                                    <input asp-for="CartHeader.ExpiryMonthYear"
                                           class="form-control"
                                           id="cardExpiry"
                                           placeholder="MM/YY"
                                           required
                                           maxlength="5"
                                           autocomplete="cc-exp"/>
                                    <div class="invalid-feedback" id="cardExpiryError">Please enter a valid expiry date</div>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="CartHeader.CVV" class="form-label">CVV</label>
                                    <input asp-for="CartHeader.CVV"
                                           class="form-control"
                                           id="cardCvv"
                                           required
                                           maxlength="4"
                                           autocomplete="cc-csc"/>
                                    <div class="invalid-feedback" id="cardCvvError">Please enter a valid CVV</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Summary -->
                <div class="col-md-5">
                    <div class="card shadow-sm">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Order Summary</h5>
                        </div>
                        <div class="card-body">
                            @foreach (var item in Model.CartDetails)
                            {
                                <div class="row mb-3">
                                    <div class="col-8">
                                        <h6 class="mb-0">@item.Performance.Name</h6>
                                        <small class="text-muted">
                                            @item.Performance.ShowDateTime.ToString("dd MMM yyyy HH:mm")
                                        </small><br/>
                                        <span class="badge bg-info">@item.TicketType</span>
                                        <small class="text-muted">Seats: @item.SeatNumbers</small>
                                    </div>
                                    <div class="col-4 text-end">
                                        <p class="mb-0">@item.PricePerTicket.ToString("C", usdCulture)</p>
                                        <small class="text-muted">x @item.Quantity</small>
                                    </div>
                                </div>
                            }
                            <hr/>
                            <div class="d-flex justify-content-between">
                                <span>Subtotal:</span>
                                <span>@Model.CartHeader.GrandTotal.ToString("C", usdCulture)</span>
                            </div>
                            @if (Model.CartHeader.DiscountTotal > 0)
                            {
                                <div class="d-flex justify-content-between mb-2 text-success">
                                    <span>Discount:</span>
                                    <span>@Model.CartHeader.DiscountTotal.ToString("F2")%</span>
                                </div>
                            }
                            <hr/>
                            <div class="d-flex justify-content-between">
                                <h6 class="mb-0">Total:</h6>
                                <h6 class="mb-0 text-danger">
                                    @((Model.CartHeader.GrandTotal).ToString("C", usdCulture))
                                </h6>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-lock me-2"></i>Place Order
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
}
else
{
    <div class="text-center py-5">
        <h3>Your cart is empty</h3>
        <p class="text-muted">Add some performances to your cart first</p>
        <a asp-controller="Performance" asp-action="Search" class="btn btn-primary">
            <i class="fas fa-ticket-alt me-2"></i>Browse Performances
        </a>
    </div>
}

@section Styles {
    <style>
    .card-brand-icon {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 24px;
        color: #6c757d;
    }

    .form-control.is-card-invalid {
        border-color: #dc3545;
        padding-right: calc(1.5em + 0.75rem);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }
</style>
}

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        const stripe = Stripe('pk_test_51MTi62FcLOHghxDePnGLffsIETFm4xnE3xUi6t6HwtMKBH5zAnBVkib1nAJ4Y2ZfLo0TRIwCCtYBInc9vTO4E65w00fj0HuSwg'); // Replace with your Stripe publishable key
        
        const cardBrands = {
            visa: 'fab fa-cc-visa',
            mastercard: 'fab fa-cc-mastercard',
            amex: 'fab fa-cc-amex',
            discover: 'fab fa-cc-discover',
            diners: 'fab fa-cc-diners-club',
            jcb: 'fab fa-cc-jcb',
            unknown: 'far fa-credit-card'
        };

        function validateCardNumber(number) {
            return stripe.validateCardNumber(number.replace(/\s/g, ''));
        }

        function validateExpiry(expiry) {
            const [month, year] = expiry.split('/');
            return stripe.validateExpiry(month, year);
        }

        function validateCVC(cvc) {
            return stripe.validateCVC(cvc);
        }

        function detectCardBrand(number) {
            const brand = stripe.cardType(number.replace(/\s/g, ''));
            const iconClass = cardBrands[brand] || cardBrands.unknown;
            document.getElementById('cardBrandIcon').className = `card-brand-icon ${iconClass}`;
        }

        document.getElementById('cardNumber').addEventListener('input', function(e) {
            let value = this.value.replace(/\D/g, '');
            this.value = value.replace(/(\d{4})(?=\d)/g, '$1 ');
            detectCardBrand(value);
            
            if (value.length >= 13) {
                if (!validateCardNumber(value)) {
                    this.classList.add('is-card-invalid');
                    document.getElementById('cardNumberError').textContent = 'Invalid card number';
                } else {
                    this.classList.remove('is-card-invalid');
                }
            }
        });

        document.getElementById('cardExpiry').addEventListener('input', function(e) {
            let value = this.value.replace(/\D/g, '');
            if (value.length >= 2) {
                value = value.substring(0,2) + '/' + value.substring(2);
            }
            this.value = value;
            
            if (value.length === 5) {
                if (!validateExpiry(value)) {
                    this.classList.add('is-card-invalid');
                    document.getElementById('cardExpiryError').textContent = 'Invalid expiry date';
                } else {
                    this.classList.remove('is-card-invalid');
                }
            }
        });

        document.getElementById('cardCvv').addEventListener('input', function(e) {
            let value = this.value.replace(/\D/g, '');
            this.value = value;
            
            if (value.length >= 3) {
                if (!validateCVC(value)) {
                    this.classList.add('is-card-invalid');
                    document.getElementById('cardCvvError').textContent = 'Invalid CVV';
                } else {
                    this.classList.remove('is-card-invalid');
                }
            }
        });

        document.querySelector('form').addEventListener('submit', function(e) {
            const cardNumber = document.getElementById('cardNumber').value;
            const cardExpiry = document.getElementById('cardExpiry').value;
            const cardCvv = document.getElementById('cardCvv').value;

            if (!validateCardNumber(cardNumber) || 
                !validateExpiry(cardExpiry) || 
                !validateCVC(cardCvv)) {
                e.preventDefault();
                return false;
            }
        });
    </script>
}